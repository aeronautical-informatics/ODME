name: Github Actions CI/CD Workflow for ODME

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build_test:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn -B package --file pom.xml


  publish-job:
    runs-on: ubuntu-latest
    needs: build_test
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Verify with Maven
        run: mvn --batch-mode --update-snapshots verify
      - name: Create Staging Directory and Copy JAR to Staging
        run: mkdir staging && cp target/*.jar staging
      - uses: actions/checkout@v4

        with:
          name: Package
          path: staging

  automate-release:
    name: Automate GitHub Release
    needs: publish-job
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/checkout@v4
        with:
          name: Package
      - name: Archive app content
        uses: thedoctor0/zip-release@master
        with:
          filename: package.zip
      - name: create Github release
        id: create-new-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          body: This is a release of the ODME project.
      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ steps.create-new-release.outputs.upload_url }}
          asset_path: ./package.zip
          asset_name: package-v${{ github.run_number }}.zip
          asset_content_type: application/zip

#  build-docker-image:
#    name: Build and Push Docker Image
#    runs-on: ubuntu-latest
#    needs: publish-job
#    steps:
#      - uses: actions/checkout@v3
#      - name: Build and push Docker image
#        run: |
#          docker build -f Dockerfile -t ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO_NAME }}:latest
#          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
#          docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO_NAME }}:latest

