name: GitHub Actions CI/CD Workflow for ODME

permissions:
  contents: write       # Needed for creating releases and uploading assets
  packages: write       # Optional: for publishing artifacts or Docker
  actions: read

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build_test:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build and Test with Maven (includes JaCoCo)
        run: mvn clean verify

      - name: Upload JaCoCo HTML Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: target/site/jacoco/

  publish-job:
    name: Publish Build Artifact
    runs-on: ubuntu-latest
    needs: build_test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Verify build and copy artifact
        run: |
          mvn --batch-mode --update-snapshots verify
          mkdir -p staging && cp target/*.jar staging/

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: Package
          path: staging

  automate-release:
    name: Automate GitHub Release
    needs: publish-job
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: Package

      - name: Archive app content
        uses: thedoctor0/zip-release@master
        with:
          filename: package.zip

      # Detect repository (works for PRs, merges, and pushes)
      - name: Detect repository context(forked or original)
        id: check_repo
        run: |
          REPO_NAME="${GITHUB_REPOSITORY:-${{ github.repository }}}"
          REPO_NAME="${REPO_NAME:-${{ github.event.repository.full_name }}}"

          echo "Repository detected as: $REPO_NAME"

          if [[ "$REPO_NAME" == "aeronautical-informatics/ODME" ]]; then
            echo "is_fork=false" >> $GITHUB_OUTPUT
            echo " Main repository detected — real release will run."
          else
            echo "is_fork=true" >> $GITHUB_OUTPUT
            echo " Fork or undefined repo detected — simulated release will run."
          fi

      # Real release only for main repository
      - name: Create GitHub Release
        if: steps.check_repo.outputs.is_fork == 'false'
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: "Release ${{ github.run_number }}"
          body: "This is a release of the ODME project."
          draft: false
          prerelease: false

      - name: Upload release asset
        if: steps.check_repo.outputs.is_fork == 'false'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./package.zip
          asset_name: package-v${{ github.run_number }}.zip
          asset_content_type: application/zip

      # Simulated release for forks or restricted PRs
      - name: Simulate release (for forks)
        if: steps.check_repo.outputs.is_fork == 'true'
        run: |
          echo " Skipping real release because this is a forked or sandboxed repository."
          echo " Simulated release success to keep CI/CD passing."
